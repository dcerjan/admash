{"version":3,"sources":["components/Stats/Stat.module.css","components/AppEntry/AppEntry.module.css","components/EnvironmentPicker/EnvironmentPicker.module.css","components/Badge/Badge.module.css","pages/MyApps/components/Overview.module.css","pages/MyApps/components/Rundown.module.css","components/Menu/Menu.module.css","components/Menu/Nav.module.css","components/ContentSwitch/ContentSwitch.module.css","components/Stats/Stats.module.css","components/Button/Button.module.css","components/Pane/Pane.module.css","components/Select/Select.module.css","components/Hamburger/Hamburger.module.css","models/AppEntryRecord.ts","components/Menu/Menu.tsx","components/Menu/Nav.tsx","components/ContentSwitch/ContentSwitch.tsx","components/Badge/Badge.tsx","components/Stats/Stat.tsx","components/Pane/Pane.tsx","components/Stats/Stats.tsx","components/Select/Select.tsx","pages/MyApps/components/Overview.tsx","components/Button/Button.tsx","components/EnvironmentPicker/EnvironmentPicker.tsx","components/Hamburger/Hamburger.tsx","components/AppEntry/AppEntry.tsx","pages/MyApps/components/Rundown.tsx","pages/MyApps/index.tsx","pages/Reports/index.tsx","pages/Docs/index.tsx","pages/Download/index.tsx","pages/MyProfile/index.tsx","Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Environment","Menu","children","className","styles","Vendor","preventDragHandler","event","preventDefault","Nav","to","icon","label","activeClassName","Active","onDragStart","ContentSwitch","Content","atActive","opacity","atLeave","atEnter","ContentTransitionWrapper","Badge","delta","sign","clsx","Red","Green","toFixed","Stat","data","StatHeader","name","StatBody","symbolFix","Symbol","symbol","Value","numeric","split","before","after","trimmed","trimZeroes","value","BadgePosition","Pane","mock","id","Stats","StatsWrapper","map","key","Expander","Select","props","mockOptions","Overview","Header","Title","options","placeholder","isClearable","Button","text","inverted","Inverted","EnvironmentPicker","env","Off","Sandbox","Live","Hamburger","AppEntry","Platform","platform","Name","Earnings","earnedAmount","Actions","environment","mockData","Rundown","app","MyApps","Reports","Docs","Download","MyProfile","Routes","exact","from","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5ffc081.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Stat\":\"Stat_Stat__1l64s\",\"StatHeader\":\"Stat_StatHeader__1lw-R\",\"StatBody\":\"Stat_StatBody__3liiP\",\"Symbol\":\"Stat_Symbol__1OXiK\",\"Value\":\"Stat_Value__2ny9W\",\"BadgePosition\":\"Stat_BadgePosition__3KqM1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppEntry\":\"AppEntry_AppEntry__7vvEU\",\"Platform\":\"AppEntry_Platform__1QJ5D\",\"Name\":\"AppEntry_Name__mqW7X\",\"Earnings\":\"AppEntry_Earnings__1I11g\",\"Environment\":\"AppEntry_Environment__3CQ9n\",\"Actions\":\"AppEntry_Actions__5pm-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EnvironmentPicker\":\"EnvironmentPicker_EnvironmentPicker__k9-EC\",\"Active\":\"EnvironmentPicker_Active__2G9Vy\",\"Off\":\"EnvironmentPicker_Off__aNghh\",\"Sandbox\":\"EnvironmentPicker_Sandbox__1ORoG\",\"Live\":\"EnvironmentPicker_Live__-XCmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Badge\":\"Badge_Badge__2WWsV\",\"Red\":\"Badge_Red__1nbod\",\"Green\":\"Badge_Green__3AWgQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overview\":\"Overview_Overview__2exm4\",\"Header\":\"Overview_Header__3BOQk\",\"Title\":\"Overview_Title__3gqmg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Rundown\":\"Rundown_Rundown__2RwQK\",\"Header\":\"Rundown_Header__3G4ny\",\"Title\":\"Rundown_Title__1F4nG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__zteKc\",\"Vendor\":\"Menu_Vendor__3FjFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__1vwCI\",\"Active\":\"Nav_Active__1gd9s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"ContentSwitch_Content__3DxnU\",\"ContentTransitionWrapper\":\"ContentSwitch_ContentTransitionWrapper__2aj3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatsWrapper\":\"Stats_StatsWrapper__31nUO\",\"Expander\":\"Stats_Expander__3QSYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\",\"Inverted\":\"Button_Inverted__3vQrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pane\":\"Pane_Pane__2Ol9F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__SqwD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hamburger\":\"Hamburger_Hamburger__25dtW\"};","export enum Environment {\n  Off = 'Off',\n  Sandbox = 'Sandbox',\n  Live = 'Live',\n}\n\nexport type AppEntryRecord = {\n  id: number,\n  platform: string,\n  name: string\n  earnedAmount: number,\n  delta: number,\n  environment: Environment\n}\n","import React from 'react'\n\nimport styles from './Menu.module.css'\n\nexport const Menu: React.FC = ({ children }) => (\n  <nav className={styles.Menu}>\n    <div className={styles.Vendor}>\n      <i className='fa fa-cube' />\n      Vendor\n    </div>\n    { children }\n  </nav>\n)\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport styles from './Nav.module.css'\n\ntype AllowedIcons =\n  | 'window-maximize'\n  | 'pie-chart'\n  | 'file'\n  | 'download'\n  | 'user'\n\ntype NavPublicProps = {\n  to: string\n  icon: AllowedIcons\n  label: string\n}\n\nconst preventDragHandler = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n  event.preventDefault();\n}\n\nexport const Nav: React.FC<NavPublicProps> = ({ to, icon, label }) => (\n  <NavLink\n    className={styles.Nav}\n    activeClassName={styles.Active}\n    to={to}\n    onDragStart={preventDragHandler}\n  >\n    <i className={`fa fa-${icon}`} />\n    {label}\n  </NavLink>\n)\n","import React from 'react'\nimport { AnimatedSwitch } from 'react-router-transition'\n\nimport styles from './ContentSwitch.module.css'\n\nexport const ContentSwitch: React.FC = ({ children }) => (\n  <div className={styles.Content}>\n    <AnimatedSwitch\n      atActive={{ opacity: 1.0 }}\n      atLeave={{ opacity: 0.0 }}\n      atEnter={{ opacity: 0.0 }}\n      className={styles.ContentTransitionWrapper}\n    >\n      { children }\n    </AnimatedSwitch>\n  </div>\n)","import clsx from 'clsx'\nimport React from 'react'\n\nimport styles from './Badge.module.css'\n\n\ntype BadgePublicProps = {\n  delta: number,\n  sign: -1 | 0 | 1\n}\n\nexport const Badge: React.FC<BadgePublicProps> = ({ delta, sign }) => (\n  <div className={clsx({ [styles.Badge]: true, [styles.Red]: delta * sign < 0, [styles.Green]: delta * sign > 0 })}>\n    { `${delta >= 0 ? '+' : ''}${delta.toFixed(0)}%` }\n  </div>\n)","import React from 'react'\n\nimport { StatRecord } from '../../models/StatRecord'\nimport styles from './Stat.module.css'\nimport { Badge } from '../Badge'\n\nexport type StatPublicProps = {\n  data: StatRecord,\n}\n\nconst trimZeroes = (numeric: string) => {\n  const [before, after] = numeric.split('.')\n  const trimmed = after && after.split('0')[0]\n  if (trimmed == null || trimmed === '') {\n    return before\n  } else {\n\n    return `${before}.${trimmed}`\n  }\n}\n\nexport const Stat: React.FC<StatPublicProps> = ({ data }) => (\n  <div className={styles.Stat}>\n    <div className={styles.StatHeader}>\n      <i className={`fa fa-${data.icon}`} />\n      { data.name }\n    </div>\n    <div className={styles.StatBody}>\n      { /* it's usually some kind of formatter's responsibility to format data according to some business rules, since this is a mock, this will suffice */ }\n      { data.symbolFix === 'prefix' ? <span className={styles.Symbol}>{ data.symbol }</span> : null }\n      <span className={styles.Value}>{ trimZeroes(data.value.toFixed(2)) }</span>\n      { data.symbolFix === 'postfix' ? <span className={styles.Symbol}>{ data.symbol }</span> : null }\n\n      <div className={styles.BadgePosition}>\n        <Badge delta={data.delta} sign={data.sign}/>\n      </div>\n    </div>\n  </div>\n)\n","import React from 'react'\n\nimport styles from './Pane.module.css'\n\n\nexport const Pane: React.FC = ({ children }) => (\n  <div className={styles.Pane}>\n    { children }\n  </div>\n)\n","import React from 'react'\n\nimport { Pane } from '../Pane'\nimport { Stat } from './Stat'\n\nimport { StatRecord } from '../../models/StatRecord'\nimport styles from './Stats.module.css'\n\n\nconst mock: StatRecord[] = [{\n  id: 1,\n  icon: 'bar-chart',\n  name: 'revenue',\n  symbolFix: 'prefix',\n  symbol: '$',\n  value: 510,\n  delta: 12,\n  sign: +1,\n}, {\n  id: 2,\n  icon: 'bolt',\n  name: 'impressions',\n  symbolFix: 'postfix',\n  symbol: 'M',\n  value: 12.2,\n  delta: 12,\n  sign: +1,\n}, {\n  id: 3,\n  icon: 'star-half-o',\n  name: 'fill rate',\n  symbolFix: 'postfix',\n  symbol: '%',\n  value: 37.5,\n  delta: 4,\n  sign: +1,\n}, {\n  id: 4,\n  icon: 'line-chart',\n  name: 'ecpm',\n  symbolFix: 'prefix',\n  symbol: '%',\n  value: 2.7,\n  delta: 5,\n  sign: -1,\n}]\n\nexport const Stats: React.FC = () => (\n  <Pane>\n    <div className={styles.StatsWrapper}>\n      { mock.map((data) => <Stat key={data.id} data={data} />)}\n    </div>\n    <div className={styles.Expander}>\n      view all data\n      <i className='fa fa-chevron-down'/>\n    </div>\n  </Pane>\n)\n","import clsx from 'clsx'\nimport React from 'react'\nimport ReactSelect, { Props } from 'react-select'\n\nimport styles from './Select.module.css'\n\n\nexport type SelectOption = {\n  value: string,\n  label: string,\n}\n\ntype SelectPublicProps = Props<SelectOption>\n\nexport const Select: React.FC<SelectPublicProps> = (props) => (\n  <ReactSelect\n    {...props}\n    className={clsx(styles.Select, props.className)}\n  />\n)\n","import React from 'react'\n\nimport { Stats } from '../../../components/Stats'\nimport { Select } from '../../../components/Select'\n\nimport styles from './Overview.module.css'\nimport { SelectOption } from '../../../components/Select/Select'\n\n\nconst mockOptions: SelectOption[] = [\n  { value: '1', label: 'First' },\n  { value: '2', label: 'Second' },\n  { value: '3', label: 'Third' },\n]\n\nexport const Overview: React.FC = () => (\n  <div className={styles.Overview}>\n    <div className={styles.Header}>\n      <div className={styles.Title}>overview</div>\n      <Select\n        options={mockOptions}\n        placeholder='Select Data'\n        isClearable\n      />\n    </div>\n    <Stats />\n  </div>\n)\n","import clsx from 'clsx'\nimport React from 'react'\n\nimport styles from './Button.module.css'\n\ntype ButtonPublicProps = {\n  icon?: string\n  text?: string\n  inverted?: boolean\n  // and of course, onClick and friends\n}\n\nexport const Button: React.FC<ButtonPublicProps> = ({ icon, text, inverted }) => (\n  <div className={clsx({ [styles.Button]: true, [styles.Inverted]: inverted})}>\n    { icon != null ? <i className={`fa fa-${icon}`} /> : null }\n    { text != null ? text : null }\n  </div>\n)\n","import clsx from 'clsx'\nimport React from 'react'\n\nimport { Environment } from '../../models/AppEntryRecord'\nimport styles from './EnvironmentPicker.module.css'\n\ntype EnvironmentPickerPublicProps = {\n  env: Environment\n}\n\nexport const EnvironmentPicker: React.FC<EnvironmentPickerPublicProps> = ({ env }) => (\n  <div className={clsx(styles.EnvironmentPicker)}>\n    <div className={clsx(styles.Off, env === Environment.Off && styles.Active)}>{Environment.Off}</div>\n    <div className={clsx(styles.Sandbox, env === Environment.Sandbox && styles.Active)}>{Environment.Sandbox}</div>\n    <div className={clsx(styles.Live, env === Environment.Live && styles.Active)}>{Environment.Live}</div>\n  </div>\n)\n","import React from 'react'\n\nimport styles from './Hamburger.module.css'\n\n\nexport const Hamburger: React.FC = () => (\n  <div className={styles.Hamburger}>\n    <i className={`fa fa-ellipsis-h`} />\n  </div>\n)\n","import React from 'react'\n\nimport { AppEntryRecord } from '../../models/AppEntryRecord'\nimport { Pane } from '../Pane'\nimport { Button } from '../Button'\nimport styles from './AppEntry.module.css'\nimport { Badge } from '../Badge'\nimport { EnvironmentPicker } from '../EnvironmentPicker'\nimport { Hamburger } from '../Hamburger'\n\ntype AppEntryPublicProps = {\n  data: AppEntryRecord\n}\n\nconst getPlatformIcon = (_platform: string) => 'cube'\n\nexport const AppEntry: React.FC<AppEntryPublicProps> = ({ data }) => (\n  <Pane>\n    <div className={styles.AppEntry}>\n      <div className={styles.Platform}>\n        <i className={`fa fa-${getPlatformIcon(data.platform)}`} />\n      </div>\n      <div className={styles.Name}>\n        { data.name }\n      </div>\n      <div className={styles.Earnings}>\n        { `$${data.earnedAmount.toFixed(2)}` }\n        <Badge delta={data.delta} sign={+1} />\n      </div>\n      <div className={styles.Actions}>\n        <Button inverted icon='cog' />\n        <Button inverted icon='info-circle' />\n        <Button inverted icon='bar-chart' />\n      </div>\n      <div className={styles.Environment}>\n        <EnvironmentPicker env={data.environment} />\n      </div>\n      <div className={styles.Hamburger}>\n        <Hamburger />\n      </div>\n    </div>\n  </Pane>\n)","import React from 'react'\n\nimport styles from './Rundown.module.css'\nimport { AppEntry } from '../../../components/AppEntry'\nimport { Button } from '../../../components/Button'\nimport { AppEntryRecord, Environment } from '../../../models/AppEntryRecord'\n\n\nconst mockData: AppEntryRecord[] = [\n  { id: 1, platform: 'unity', name: 'TrackDemoAWE', earnedAmount: 224, delta: 16, environment: Environment.Sandbox },\n  { id: 2, platform: 'unity', name: 'RacingDemoAdmix-2', earnedAmount: 224, delta: 16, environment: Environment.Off },\n  { id: 3, platform: 'unity', name: 'TrackDemoAWE', earnedAmount: 224, delta: 16, environment: Environment.Live },\n  { id: 4, platform: 'unity', name: 'RacingDemoAdmix2', earnedAmount: 224, delta: 16, environment: Environment.Sandbox },\n  { id: 5, platform: 'unity', name: 'RacingDemoAdmix', earnedAmount: 224, delta: 16, environment: Environment.Live }\n]\n\nexport const Rundown: React.FC = () => (\n  <div className={styles.Rundown}>\n    <div className={styles.Header}>\n      <div className={styles.Title}>my apps</div>\n      <Button icon='filter' />\n    </div>\n    { mockData.map((app) => <AppEntry key={app.id} data={app} />) }\n  </div>\n)\n","import React from 'react'\n\nimport { Overview } from './components/Overview'\nimport { Rundown } from './components/Rundown'\n\n\nexport const MyApps = () => (\n  <div>\n    <Overview />\n    <Rundown />\n  </div>\n)\n","import React from 'react'\n\n\nexport const Reports = () => (\n  <h2>Reports</h2>\n)\n","import React from 'react'\n\n\nexport const Docs = () => (\n  <h2>Docs</h2>\n)\n","import React from 'react'\n\n\nexport const Download = () => (\n  <h2>Download</h2>\n)\n","import React from 'react'\n\n\nexport const MyProfile = () => (\n  <h2>MyProfile</h2>\n)\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport { Menu, Nav } from './components/Menu';\nimport { ContentSwitch } from './components/ContentSwitch';\nimport { MyApps } from './pages/MyApps'\nimport { Reports } from './pages/Reports';\nimport { Docs } from './pages/Docs';\nimport { Download } from './pages/Download';\nimport { MyProfile } from './pages/MyProfile';\n\n\nexport const Routes: React.FC = () => (\n  <Router>\n    <Redirect exact from=\"/\" to=\"/my_apps\" />\n    <Menu>\n      <Nav to='/my_apps' icon='window-maximize' label='My Apps' />\n      <Nav to='/reports' icon='pie-chart' label='Reports' />\n      <Nav to='/docs' icon='file' label='Docs' />\n      <Nav to='/download' icon='download' label='Download' />\n      <Nav to='/my_profile' icon='user' label='My Profile' />\n    </Menu>\n\n    <ContentSwitch>\n      <Route path='/my_apps'><MyApps /></Route>\n      <Route path='/reports'><Reports /></Route>\n      <Route path='/docs'><Docs /></Route>\n      <Route path='/download'><Download /></Route>\n      <Route path='/my_profile'><MyProfile /></Route>\n    </ContentSwitch>\n  </Router>\n)\n","import React from 'react';\nimport './App.css';\nimport 'font-awesome/css/font-awesome.css';\n\nimport { Routes } from './Routes'\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}